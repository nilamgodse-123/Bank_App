import random
import string
import time

import faker
import pytest

from pageObject.Login_Page import LoginPage
from pageObject.SignUp_Page import signUp_class
from utilities.readConfig_utility import ReadConfig_class


@pytest.mark.usefixtures("setup")
class Test_Login_001:
   username =ReadConfig_class.username_data()
   password =ReadConfig_class.password_data()
   base_link=ReadConfig_class.base_url()
   login_url=ReadConfig_class.login_url()
   signup_url =ReadConfig_class.signup_url()


   driver=None

   def test_bankapp_url_001(self):
       self.driver.get(self.base_link)

       if self.driver.title == "Bank Application":
           print("Login page is displayed")
           self.driver.save_screenshot(".\\Screenshots\\test_bankapp_url_001_pass.png")
           assert True
       else:
           print("Login page is not displayed")
           assert False

   def test_bankapp_login_url_002(self):
        self.driver.get(self.login_url)
        lp = LoginPage(self.driver)
        lp.Enter_username(self.username)
        lp.Enter_password(self.password)
        lp.click_login_button()
        if self.driver.title == "Dashboard":
            print("User logged in successfully")
            self.driver.save_screenshot(".\\Screenshots\\test_bankapp_login_url_002_pass.png")
        else:
            print("user not logged in successfully")

   def test_bankapp_signup_url_003(self,faker):
       self.driver.get(self.signup_url)
       sp = signUp_class(self.driver)
       username = faker.name()
       print(f"Username: {username}")
       sp.Enter_username(username)
       sp.Enter_password("Admin@123")
       phone_number = faker.phone_number()
       print(f"phone_number: {faker.phone_number()}")
       print(f"Number generated by function {generate_random_phone_number()}")
       sp.Enter_phone(phone_number)
       email = faker.email()
       print(f"email: {email}")
       Email=faker.email()
       print(f"Email generated by function {faker.email()}")
       sp.Enter_email(Email)       # scroll into view
       sp.click_Createuser_button()
       self.driver.execute_script("arguments[0].scrollIntoView();",sp.click_Createuser_button())

       time.sleep(2)
       if sp.verify_success_message()== "signup_pass":
           print("User created successfully")
           self.driver.save_screenshot(".\\Screenshots\\test_bankapp_signup_url_003_pass.png")
       else:
           print("User not created successfully")


def generate_random_phone_number():
    return ''.join(random.choices(string.digits, k= 10))